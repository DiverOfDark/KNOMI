name: PlatformIO CI

permissions:
  contents: write

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: 
            ~/.npm
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO Project
        run: | 
            cd Firmware 
            pio run --disable-auto-clean -e esp32dev
            pio run --disable-auto-clean -e esp32dev -t buildfs 
            pio run --disable-auto-clean -e esp32dev -t merge_firmware 

            cp .pio/build/esp32dev/buildinfo.json ../buildinfo.json
            cp .pio/build/esp32dev/firmware_full.bin ../firmware_full.bin
            cp .pio/build/esp32dev/firmware.bin ../firmware.bin 
            cp .pio/build/esp32dev/firmware.elf ../firmware.elf
            cp .pio/build/esp32dev/littlefs.bin ../littlefs.bin
          
      - name: Archive Firmware Files
        uses: actions/upload-artifact@v3
        with: 
          name: firmware
          path: |
            buildinfo.json
            firmware.bin
            firmware_full.bin
            firmware.elf
            littlefs.bin

  release:
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: 
      name: github-releases
    steps:
    - name: Download Firmware Files
      id: download
      uses: actions/download-artifact@v3
      with:
        name: firmware

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          ${{steps.download.outputs.download-path}}/firmware.bin
          ${{steps.download.outputs.download-path}}/firmware.elf
          ${{steps.download.outputs.download-path}}/littlefs.bin